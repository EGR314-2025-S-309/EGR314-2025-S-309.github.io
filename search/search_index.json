{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Main","text":"","tags":["tag1","tag2"]},{"location":"#intro","title":"Intro","text":"<p>This website provides documentation for an embedded systems project. The project is a spinning top designed to provide a fun and interesting way to get high school students interested in STEM. This website is meant to document the ideas and decision making process of our team throughout the projects timeline. We also have individual websites to document our individual systems and provide more information for each section of our project.</p> <ul> <li>Baron Website</li> <li>Bruce Website</li> <li>Aadish Website</li> <li>Shaurya Website</li> </ul>","tags":["tag1","tag2"]},{"location":"#title","title":"Title","text":"<p>STEM Demonstration</p> <p>Team 309</p> <p>Members</p> <ul> <li>Baron Guido</li> <li>Bruce Myers</li> <li>Aadish Lele</li> <li>Shaurya Manglik</li> </ul> <p>Preperation Date: January 16</p> <p>Spring 2025</p> <p>ASU, EGR 314, Prof. Nichols</p>","tags":["tag1","tag2"]},{"location":"#links-to-other-pages","title":"Links to Other Pages","text":"<p>Ideation and Concept Generation</p> <p>Block/Process Diagrams &amp; Message Structure</p>","tags":["tag1","tag2"]},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/","title":"Block/Process Diagrams & Message Structure","text":""},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/#block-diagram","title":"Block Diagram","text":""},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/#general-diagram","title":"General Diagram","text":""},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/#connector-diagram","title":"Connector Diagram","text":""},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/#process-diagram","title":"Process Diagram","text":"<pre><code>sequenceDiagram\nautonumber\nactor In-Person User\nIn-Person User--&gt;&gt;Bruce: Change Motor Direction\nBruce-&gt;&gt;Baron: Change Motor Direction\nBaron-&gt;&gt;Shaurya: Change Motor Direction\nShaurya-&gt;&gt;Aadish: Change Motor Direction\nAadish-&gt;&gt;Aadish: Motor Direction Changed&lt;br&gt;(Trash)\nloop Every Millisecond\n  Shaurya-&gt;&gt;Aadish: Update Motor Speed\n  Aadish-&gt;&gt;Aadish: Motor Speed Updated&lt;br&gt;(Trash)\nend\nShaurya-&gt;&gt;Aadish: Rotational Velocity\nAadish-&gt;&gt;Baron: Rotational Velocity\nBaron-&gt;&gt;Bruce: Rotational Velocity\nBruce--&gt;&gt;In-Person User: Display Rotational Velocity\nactor Web User\nWeb User--&gt;&gt;Baron: Change Motor Direction\nBaron-&gt;&gt;Aadish: Change Motor Direction\nAadish-&gt;&gt;Aadish: Motor Direction Changed&lt;br&gt;(Trash)</code></pre>"},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/#message-structure","title":"Message Structure","text":""},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/#ids","title":"ID's","text":"ID Definition 0xFF Bruce 0xFE Baron 0xFD Aadish 0xFC Shaurya"},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/#message-types","title":"Message Types","text":"Message Typebyte 1-2(uint16_t) Description 1 Button 1 Pressed 2 Button 2 Pressed 3 Button 3 Pressed 4 Motor Forward 5 Motor Reverse 6 Motor Speed Increase 7 Motor Speed Decrease 8 Rotational Velocity"},{"location":"Block%20%2B%20Process%20Diagrams%20%26%20Message%20Structure/#messages-structure","title":"Messages Structure","text":"Message Type Byte 1-2(uint16_t) Byte 3(uint8_t) Byte 4(uint8_t) Byte 5-6(uint16_t) Byte 7-8(uint16_t) 1 0x01 0xFF 0xFF Button 1 Press 0x20 2 0x02 0xFF 0xFF Button 2 Press 0x21 3 0x03 0xFF 0xFF Button 3 Press 0x22 4 0x04 0xFF 0xFD 0x50 0x23 5 0x05 0xFF 0xFD 0x51 0x24 6 0x06 0xFC 0xFD 0x52 0x25 7 0x07 0xFC 0xFD 0x53 0x26 8 0x08 0xFC 0xFF Gyroscope Data 0x27"},{"location":"Ideation-and-Concept-Generation/","title":"Ideation and Concept Generation","text":""},{"location":"Ideation-and-Concept-Generation/#about-our-exhibit","title":"About Our Exhibit","text":"<p>Goal of our Exhibit</p> <p>The overall goal of our exhibit is to be able to show a wide group of people a new physical concept or design that can teach them something new, or expand their knowledge on the way that things in our world work that they may not know much about. This will also need to involve the user not just observing our exhibit, but being able to interact with it to better understand the concept. Users also need to be able to be interested enough with our product to give it the time to discover what it has to offer, so the exhibit will need to catch the eye over other exhibits in the area. Finally, our exhibit will need to have a simple user interface that is not only easy to use, but is intuitive and has a natural flow.</p> <p>Target Audience</p> <p>For this project, we believe that our target audience is going to be students and adults with a basic high school education. Since our showcase will be with ASU, the audience will have a varying amount of people with different backgrounds and involvement with the school. While some of the users may have done many projects or designs similar to what we may have, most of these people will likely have a basic education and may have numerous misconceptions we can inform on or interests that we can pique with our design.</p>"},{"location":"Ideation-and-Concept-Generation/#idea-generation","title":"Idea Generation","text":"Initial Ideas Line Following RobotObstacle Avoiding RobotTrash Collecting RobotRC CarDIY Power BankGesture Controlled LightsDigital DiceMusic VisualizerDroneFace Tracking RobotDrawing RobotTrash Sorting RobotAnimatronicSlot MachineCleaning RobotRobot DogDelivery DroneBalancing RobotFirefighting RobotGesture Controlled CarTennis Ball ShooterClimbing RobotTank RobotRemote Controlled RobotSubmarine RobotArticulated Robot HandWall Following RobotMaze Solving RobotWireless Picture DisplaySpinning TopObject Tracking RobotGarage Parking AssistantBike Speed MonitorGesture Controlled DroneAutomatic Webcam TrackerInteractive Fidget ToyCustomizable Slot MachineBall Balancing RobotHand Following RobotInteractive Light SculptureObstacle Climbing RobotBaby MonitorCargo Carrying RobotPortable Air Quality MonitorRobot Football KickerRobot Soccer Ball KickerRobot Baseball PitcherInteractive Fidget SpinnerWireless Speed MonitorSmart Recycling BinRobot Arm with VisionGPS DeviceAutomatic Trash Collector3D Object ScannerSmart KiteVoice Activated RC CarRobotic Chess PlayerRoom Mapping RobotRope Climbing RobotBasketball Shooting RobotItem Sorting RobotEdge Detection RobotColor-Sorting RobotSolar TrackerSelf Balancing RobotHeart Rate MonitorWireless Door LockVoice Controlled RobotWireless Automatic Trash CanGesture Controlled RobotWireless DoorbellDigital CompassGesture Mimicking RobotSmart Alarm ClockAutomatic Curtain CloserSmart Home AutomationAutomatic Door OpenerMotion Activated LightRemote Control Dancing RobotJenga RobotFall Detection RobotMini Battle BotsTransformers Style RobotAutonomous Vacuum RobotSmart Plant Watering SystemLine Following Train SystemUnderwater Drone for ExplorationRobotic Arm for 3D PrintingAutomated Pet FeederTrash Can with Object RecognitionSolar-Powered RC CarPersonal Assistant RobotGesture-Controlled WheelchairAutomated Traffic Light SystemRobotic WindowCleaner Interactive WhiteboardRobot Drone-Based Delivery SystemSmart Inventory Management RobotAI-Powered Chess RobotRobotic Crane"},{"location":"Ideation-and-Concept-Generation/#sorted-ideas","title":"Sorted Ideas","text":"Robots Toys Device Line Following RobotObstacle Avoiding RobotTrash Collecting RobotFace TrackingRobot DrawingRobot Trash SortingRobot CleaningRobot RobotDog BalancingRobot FirefightingRobot Gesture ControlledCar Tennis Ball ShooterClimbing RobotTank RobotRemote Controlled RobotSubmarine RobotArticulated Robot HandWall Following RobotMaze Solving RobotObject Tracking RobotBall Balancing RobotHand Following RobotObstacle Climbing RobotCargo Carrying RobotRobot Football KickerRobot Soccer Ball KickerRobot Baseball PitcherRobot Arm with VisionRobot Chess PlayerRoom Mapping RobotRope Climbing RobotBasketball Shooting RobotItem Sorting RobotEdge Detection RobotColor-Sorting RobotSelf Balancing RobotVoice Controlled RobotGesture Controlled RobotGesture Mimicking RobotFall Detection RobotMini Battle BotsTransformers Style Robot RC CarDigital DiceDroneAnimatronicSlot MachineDelivery DroneGesture Controlled CarTennis Ball ShooterSpinning TopGesture Controlled DroneInteractive Fidget ToyCustomizable Slot MachineInteractive Light SculptureSmart KiteVoice Activated RC CarRemote Control Dancing RobotJenga Robot DIY Power BankGesture Controlled LightsMusic VisualizerWireless Picture DisplayGarage Parking AssistantBike Speed MonitorAutomatic Webcam TrackerBaby MonitorPortable Air Quality MonitorWireless Speed MonitorSmart Recycling BinGPS DeviceWireless Automatic Trash Can3D Object ScannerWireless Door LockWireless DoorbellDigital CompassSmart Alarm ClockAutomatic Curtain CloserSmart Home AutomationAutomatic Door OpenerMotion Activated LightAutomatic Trash Collector <p>We narrowed our ideas into a handfull that we were interested in making.</p> Interesting Ideas Line Following RobotObstacle Avoiding RobotBalancing RobotClimbing RobotTank RobotArticulated Robot HandWall Following RobotMaze Solving RobotObject Tracking RobotBall Balancing RobotRobot Chess PlayerRope Climbing RobotItem Sorting RobotSelf Balancing RobotWireless Automatic Trash CanMini Battle BotsRC CarDigital DiceSpinning TopInteractive Fidget ToyBike Speed MonitorAutomatic Webcam TrackerBaby MonitorWireless Speed MonitorSmart Recycling BinGPS DeviceWireless Automatic Trash CanWireless Door LockWireless DoorbellDigital CompassSmart Alarm ClockAutomatic Curtain Closer <p>With these ideas, we narrowed it down once again into a couple ideas that were best for our users.</p> Tailored for Users Line Following RobotBalancing RobotTank RobotMaze Solving RobotRobot Chess PlayerSelf Balancing RobotMini Battle BotsRC CarDigital DiceSpinning TopInteractive Fidget Toy <p>Our final decision was a Spinning Top. We felt this was the most interesting for our users and practical for us to make within the semester. </p>"},{"location":"Ideation-and-Concept-Generation/#concept-sketch","title":"Concept Sketch","text":"<p>The main highlights that we can see from the CAD model of our spinning top exhibit are the slot for a removable battery, the inner shell that includes PCB and ribbon cables slots on the brim, the motor holder at the bottom, and the outer shell. The slot for the removable battery is placed at the center of the spinning top to ensure that the center of mass remains as close to the center as possible. This battery would be powering all PCB components, as well as the motor that makes the top spin. The inner shell is designed to hold all necessary PCB components comfortably and ensures minimal changes to these parts during the top spinning. This area also has ribbon cables on the brim to ensure steady connections. The motor holder is located at the bottom of the spinning top and allows the top to spin. We will also be able to track the speed of this motor with the other components at the top. Finally, the outer shell is designed to be aerodynamic in shape to make sure that the top can spin for a good time and doesn\u2019t go off track unexpectedly.</p> <p>As far as our functionality goes, we will have a two-way internet connection, human interface, sensors, and actuators. Two-way communication will be important when it comes to sending signals to the top to make it spin, as well as sending the speed of the top back to the user through this connection. The human interface will allow the user to make the top spin via a screen and buttons that will be separate from our spinning top. The sensors will be tracking how fast our top is spinning and sending this information back to the user. Finally, the actuator at the bottom of the spinning top will make the top spin. As far as our device is concerned, we will take steps to make sure that it is easier to use. Some of these will include detailed step-by-step instructions that are simple and easy to follow, as well as a description of what the user is going to be looking at and experiencing in our exhibit. We will also add symbols to both our spinning top and our user interface that explain what to do to experience our exhibit. This brings us to what the controls are for the top. The idea is that the user is going to be able to turn on the motor using the user interface, which will allow the top to spin upright. Then, the top will track how fast it is spinning and send this information back to the user. To make our controls reflect this, we will need to make a device that can activate the motor through the human interface. This should be relatively simple using the human interface. The only other component that will need to be accounted for is how to hold the top to make it spin. This can be done using designs on the outside of the top, as well as in the instructions. With this being an exhibit for others to experience, the user experience will be very important. With this in mind, we will need to make sure that the exhibit can experience high amounts of stress, as well as being safe and comfortable. We can achieve the durability part by making sure that the inner components of the top are compact, secure, and not prone to breaking when spinning or possibly encountering obstacles in its path. Safety will be important, especially with a spinning device like this that can suddenly become a projectile. To assist with this, we will make sure to have a secure area where the top can spin in and not cause any havoc in other exhibits. We will also make sure to have proper postage and warnings to keep away from the top while it is spinning. Finally, we will make sure that the design has sharp edges on the outer shell that could cause cuts or injuries. For comfort, we will try to make sure that everyone can access the area where the top is spinning and can see easily. For the instructions for our design, we will need to start by explaining how the top works. Then, we can go into how to activate the motor so that the top will spin. Then, the top will need to be positioned properly by the user once it is ready to spin. Finally, the user will deploy the spinning top and be able to look at what speed the top is spinning at. It will also be important to list in the instructions what the users should not do when operating the device. Some of this includes not placing your hand near the actuator, placing the top steadily and only in the bounds of the secure area, not touching the top once it is spinning and only touching it again once it is no longer spinning.</p>"},{"location":"Ideation-and-Concept-Generation/#presentation","title":"Presentation","text":""},{"location":"Resources/","title":"Potential Components","text":""},{"location":"Resources/#actuators","title":"Actuators","text":"<p>Spinning Top</p> <ul> <li>9100 RPM - 6V - 250 mA max</li> <li>DRV8830 Motor Driver</li> </ul>"},{"location":"Resources/#sensors","title":"Sensors","text":"<p>Spinning Top</p> <ul> <li>https://www.mouser.com/ProductDetail/STMicroelectronics/A3G4250DTR?qs=Ld7sMN6XJzCU8%252BkHd1RE7g%3D%3D&amp;mgh=1&amp;gQT=1</li> <li>https://www.sparkfun.com/3-axis-gyro-accelerometer-ic-mpu-6050.html?gQT=1</li> </ul>"},{"location":"Resources/#microcontrollers","title":"Microcontrollers","text":"<ul> <li>PIC18 Comparison Document</li> <li>PIC18-Q10 Product Family</li> </ul>"},{"location":"Resources/#human-machine-interface","title":"Human Machine Interface","text":""},{"location":"appendix/","title":"Appendix","text":""},{"location":"appendix/#appendix-a-team-organization","title":"Appendix A - Team Organization","text":"<p>Team Goals</p> <ul> <li>Develop a fully functional prototype that meets all project requirements and specifications for the innovatoin showcase.</li> <li>Complete all project milestones on time, including research, design, testing, and final delivery.</li> <li>Design a product that meets the requirements of us and our users.</li> <li>Make sure the product is practical and usable for our users.</li> <li>Design a product that encourages STEM based thinking for K-12 students.</li> </ul> <p>Class Goals</p> <ul> <li>Create a project that can be showcased in personal portfolios.</li> <li>Gain hands-on ecexperien in engineering principles, project management, and teamwork.</li> <li>Use this project as a stepping stone to internships, jobs, or graduate school applications.</li> <li>Develop skills and experiences that will be valuable in real-world engineering careers.</li> <li>Grow and develop new skills with professional engineering software.</li> </ul>"},{"location":"team-organization/","title":"Team Organization","text":""},{"location":"team-organization/#team-charter","title":"Team Charter","text":"<p>Our team is dedicated to creating a working prototype that meets the project goals and helps us grow as engineers by building real-world skills and preparing for our future careers.</p> <p>We came up with this statement by focusing on our top priorities as a team. We want to build a working prototype that not only meets the project goals but also helps us grow as engineers. This project is more than just an assignment, it\u2019s a chance to develop real world skills and prepare for the careers we\u2019re excited to pursue.</p>"},{"location":"team-organization/#product-mission-statement","title":"Product Mission Statement","text":"<p>Our mission is to create a practical, user-friendly product that inspires STEM learning and encourages engineering thinking for K-12 students</p> <p>Our team used the core concept of inspiring K-12 STEM education do develop our mission statement. We wanted to create a product that not only encourages engineering thinking but is also practical and easy to use. Through discussion, we refined our statement to reflect our shared passion for STEM and how we can use that to make STEM education accessible and impactful.</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}